/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba.salmos.tiposdeusuarios.view;

import br.com.ifba.salmos.infrastructure.service.FacadeInstance;
import br.com.ifba.salmos.infrastructure.support.StringUtil;
import br.com.ifba.salmos.tiposdeusuarios.model.TipoDeUsuario;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Igor Lopes e Eduarda
 */
public class ViewTipoDeUsuario extends javax.swing.JFrame {
    
    DefaultTableModel listaTabela;
    List<TipoDeUsuario> lista;
    int selecionado;
    
    TipoDeUsuario tipodeusuario;
    /**
     * Creates new form TipoDeUsuario
     */
    public ViewTipoDeUsuario() {
        initComponents();
    }
    
    private void atualizarTabela(List<TipoDeUsuario> listaUsuario){
        this.listaTabela = new DefaultTableModel(null, new String [] {"ID", "Nome", "Descrição"});
        
        for(TipoDeUsuario tipUsu: listaUsuario){
            listaTabela.addRow(new Object[]{tipUsu.getId(), tipUsu.getNome(), tipUsu.getDescricao()});
        }
        
        this.tblTipoDeUsuario.setModel(this.listaTabela);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JTabbedPane1 = new javax.swing.JTabbedPane();
        panelAdd = new javax.swing.JPanel();
        lblNomeAdd = new javax.swing.JLabel();
        lblDescriçãoAdd = new javax.swing.JLabel();
        txtNomeAdd = new javax.swing.JTextField();
        txtDescriçãoAdd = new javax.swing.JTextField();
        btnAdicionarAdd = new javax.swing.JButton();
        panelListar = new javax.swing.JPanel();
        btnListar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTipoDeUsuario = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de Tipo De Usuário");

        JTabbedPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        JTabbedPane1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N

        lblNomeAdd.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        lblNomeAdd.setText("Nome:");

        lblDescriçãoAdd.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        lblDescriçãoAdd.setText("Descrição:");

        txtNomeAdd.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N

        txtDescriçãoAdd.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        txtDescriçãoAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescriçãoAddActionPerformed(evt);
            }
        });

        btnAdicionarAdd.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        btnAdicionarAdd.setText("Adicionar");
        btnAdicionarAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAddLayout = new javax.swing.GroupLayout(panelAdd);
        panelAdd.setLayout(panelAddLayout);
        panelAddLayout.setHorizontalGroup(
            panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDescriçãoAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDescriçãoAdd)
                    .addComponent(txtNomeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNomeAdd)
                    .addGroup(panelAddLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(btnAdicionarAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(321, Short.MAX_VALUE))
        );
        panelAddLayout.setVerticalGroup(
            panelAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lblNomeAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNomeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDescriçãoAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtDescriçãoAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAdicionarAdd)
                .addContainerGap(192, Short.MAX_VALUE))
        );

        JTabbedPane1.addTab("Adicionar", panelAdd);

        btnListar.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        btnListar.setText("Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        tblTipoDeUsuario.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        tblTipoDeUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nome", "Descrição"
            }
        ));
        tblTipoDeUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTipoDeUsuarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTipoDeUsuario);
        if (tblTipoDeUsuario.getColumnModel().getColumnCount() > 0) {
            tblTipoDeUsuario.getColumnModel().getColumn(0).setResizable(false);
        }

        btnEditar.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnRemover.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelListarLayout = new javax.swing.GroupLayout(panelListar);
        panelListar.setLayout(panelListarLayout);
        panelListarLayout.setHorizontalGroup(
            panelListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelListarLayout.createSequentialGroup()
                .addGroup(panelListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelListarLayout.createSequentialGroup()
                        .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 198, Short.MAX_VALUE))
        );
        panelListarLayout.setVerticalGroup(
            panelListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelListarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnListar)
                    .addComponent(btnEditar)
                    .addComponent(btnRemover))
                .addContainerGap())
        );

        JTabbedPane1.addTab("Listar", panelListar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 8, Short.MAX_VALUE)
                .addComponent(JTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        FacadeInstance.getInstance().deleteTipoDeUsuario(tipodeusuario);
        //this.atualizarTabela(this.lista);
        this.lista = FacadeInstance.getInstance().getAllTipoDeUsuarios();
        this.atualizarTabela(this.lista);
        JOptionPane.showMessageDialog(null, "Usuario Excluído", "Atenção", JOptionPane.WARNING_MESSAGE);
        this.selecionado = -1;
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        String nome = JOptionPane.showInputDialog(null,"Digite um nome: ");
        String descricao = JOptionPane.showInputDialog(null,"Digite uma Descrição: ");
        
        if(nome.isEmpty() || descricao.isEmpty()){
                JOptionPane.showMessageDialog(null,"Preencha todos os campos corretamente! Tente novamente.");//msg de campos faltantes
        }else{
            tipodeusuario.setNome(nome);
            tipodeusuario.setDescricao(descricao);
            FacadeInstance.getInstance().updateTipoDeUsuario(tipodeusuario);
            this.atualizarTabela(this.lista);
            JOptionPane.showMessageDialog(null,"Tipo De Usuário Editado!!!");
            
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        this.lista = FacadeInstance.getInstance().getAllTipoDeUsuarios();
        this.atualizarTabela(this.lista);
    }//GEN-LAST:event_btnListarActionPerformed

    private void btnAdicionarAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarAddActionPerformed
        TipoDeUsuario tipodeusuarioAdd = new TipoDeUsuario();
        if(validaCampos() == true){
            tipodeusuarioAdd.setNome(txtNomeAdd.getText());
            tipodeusuarioAdd.setDescricao(txtDescriçãoAdd.getText());
            FacadeInstance.getInstance().saveTipoDeUsuario(tipodeusuarioAdd);
            this.lista = FacadeInstance.getInstance().getAllTipoDeUsuarios();
            this.atualizarTabela(this.lista);
            JOptionPane.showMessageDialog(null,"Tipo De Usuário Cadastrado!!!");
            txtNomeAdd.setText(" ");
            txtDescriçãoAdd.setText(" ");
        }else{
            JOptionPane.showMessageDialog(null,"Campos inválidos. Tente novamente!");
            }
        
    }//GEN-LAST:event_btnAdicionarAddActionPerformed

    private void txtDescriçãoAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescriçãoAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescriçãoAddActionPerformed

    private void tblTipoDeUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTipoDeUsuarioMouseClicked
        this.selecionado = this.tblTipoDeUsuario.getSelectedRow();
        if(this.selecionado != -1){
            this.tipodeusuario = this.lista.get(this.selecionado);
        }
    }//GEN-LAST:event_tblTipoDeUsuarioMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewTipoDeUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewTipoDeUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewTipoDeUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewTipoDeUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewTipoDeUsuario().setVisible(true);
            }
        });
    }
    
    private boolean validaCampos(){
        StringUtil util = StringUtil.getInstance();
        if (txtNomeAdd.getText().equals("") && txtDescriçãoAdd.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Todos os campos são obrigatórios.", "CAMPOS OBRIGATÓRIOS", JOptionPane.ERROR_MESSAGE);
        return false;
        
        }
        else if(util.isNullOrEmpty(txtNomeAdd.getText())){
            JOptionPane.showMessageDialog(null, "Preencha o campo Nome.", "CAMPOS OBRIGATÓRIOS", JOptionPane.WARNING_MESSAGE);
            return false;
            
        }
        else if(util.isNullOrEmpty(txtDescriçãoAdd.getText())){
            JOptionPane.showMessageDialog(null, "Preencha o campo Descrição", "CAMPOS OBRIGATÓRIOS", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane JTabbedPane1;
    private javax.swing.JButton btnAdicionarAdd;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDescriçãoAdd;
    private javax.swing.JLabel lblNomeAdd;
    private javax.swing.JPanel panelAdd;
    private javax.swing.JPanel panelListar;
    private javax.swing.JTable tblTipoDeUsuario;
    private javax.swing.JTextField txtDescriçãoAdd;
    private javax.swing.JTextField txtNomeAdd;
    // End of variables declaration//GEN-END:variables
}
